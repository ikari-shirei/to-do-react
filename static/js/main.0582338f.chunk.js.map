{"version":3,"sources":["components/Header.js","components/Button.js","components/Main.js","components/Lists.js","App.js","index.js"],"names":["Header","list","className","Button","type","id","handleButton","buttonTitle","onClick","Main","lists","setLists","updateSelectedList","selectedList","removeTask","toDoNext","doingNext","doingBack","doneBack","useState","newTaskName","setNewTaskName","addNewTask","newTask","uniqid","name","targetList","find","newToDo","todo","updatedLists","map","listJSON","JSON","stringify","localStorage","setItem","saveToStorage","alert","onKeyPress","event","key","onChange","val","target","value","doing","done","Lists","setSelectedList","newListName","setNewListName","removeList","targetId","length","window","confirm","updatedList","filter","addNewList","newList","text","App","defaultList","getItem","defaultListJSON","storageList","parse","listId","useEffect","targetDone","newDone","newLists","targetToDo","targetToDoIndex","findIndex","i","push","splice","targetDoing","targetDoingIndex","targetDoneIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0582338f.chunk.js","sourcesContent":["import '../styles/header.scss'\n\nfunction Header({ list }) {\n  return (\n    <div className=\"header\">\n      <h1>To Do App</h1>\n      <h1>{list}</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import '../styles/button.scss'\n\nfunction Button({ type, id, handleButton }) {\n  const buttonTitle =\n    type === 'delete-button' ? 'Del' : type === 'next-button' ? 'Next' : 'Back'\n\n  return (\n    <div className={type}>\n      <button id={id} onClick={handleButton}>\n        {buttonTitle}\n      </button>\n    </div>\n  )\n}\n\nexport default Button\n","import '../styles/main.scss'\nimport Button from './Button'\nimport React, { useState } from 'react'\nimport uniqid from 'uniqid'\n\nfunction Main({\n  lists,\n  setLists,\n  updateSelectedList,\n  selectedList,\n  removeTask,\n  toDoNext,\n  doingNext,\n  doingBack,\n  doneBack,\n}) {\n  const [newTaskName, setNewTaskName] = useState('')\n\n  const handleInput = (val) => {\n    setNewTaskName(val.target.value)\n  }\n\n  const saveToStorage = (lists) => {\n    const listJSON = JSON.stringify(lists)\n    localStorage.setItem('list', listJSON)\n  }\n\n  const addNewTask = () => {\n    if (newTaskName !== '') {\n      const newTask = { id: uniqid(), name: newTaskName }\n\n      let targetList = lists.find((list) => {\n        return list === selectedList\n      })\n\n      const newToDo = [...targetList.todo, newTask]\n      targetList.todo = newToDo\n\n      const updatedLists = lists.map((list) => {\n        return list === selectedList ? targetList : list\n      })\n\n      setLists(updatedLists)\n      saveToStorage(updatedLists)\n\n      updateSelectedList(\n        updatedLists.find((list) => {\n          return list.id === selectedList.id\n        })\n      )\n\n      setNewTaskName('')\n    } else {\n      alert('Enter a value')\n    }\n  }\n\n  const handleInputKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      addNewTask()\n    }\n  }\n\n  return (\n    <>\n      <div className=\"to-do-container container\">\n        <div className=\"button-container\">\n          <h1>To Do</h1>\n          <input\n            className=\"todo-input\"\n            onKeyPress={handleInputKeyPress}\n            onChange={handleInput}\n            value={newTaskName}\n          />\n          <button className=\"todo-button\" onClick={addNewTask}>\n            Add\n          </button>\n        </div>\n        <div className=\"inside-container\">\n          {selectedList.todo.map((todo) => {\n            return (\n              <div className=\"todo-button-container\" key={todo.id}>\n                <p>{todo.name}</p>\n                <div>\n                  <Button\n                    id={todo.id}\n                    handleButton={toDoNext}\n                    type=\"next-button\"\n                  />\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <div className=\"doing-container container\">\n        <h1>Doing</h1>\n        <div className=\"inside-container\">\n          {selectedList.doing.map((doing) => {\n            return (\n              <div className=\"todo-button-container\" key={doing.id}>\n                <p>{doing.name}</p>\n                <div>\n                  <Button\n                    id={doing.id}\n                    handleButton={doingBack}\n                    type=\"back-button\"\n                  />\n                  <Button\n                    id={doing.id}\n                    handleButton={doingNext}\n                    type=\"next-button\"\n                  />\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <div className=\"done-container container\">\n        <h1>Done</h1>\n        <div className=\"inside-container\">\n          {selectedList.done.map((done) => {\n            return (\n              <div className=\"todo-button-container\" key={done.id}>\n                <p>{done.name}</p>\n                <div>\n                  <Button\n                    id={done.id}\n                    handleButton={doneBack}\n                    type=\"back-button\"\n                  />\n                  <Button\n                    id={done.id}\n                    type=\"delete-button\"\n                    handleButton={removeTask}\n                  />\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Main\n","import '../styles/lists.scss'\nimport Button from './Button'\nimport uniqid from 'uniqid'\nimport React, { useState } from 'react'\n\nfunction Lists({ updateSelectedList, lists, setLists, setSelectedList }) {\n  const [newListName, setNewListName] = useState('')\n\n  const saveToStorage = (lists) => {\n    const listJSON = JSON.stringify(lists)\n\n    localStorage.setItem('list', listJSON)\n  }\n\n  const removeList = (selectedList) => {\n    const targetId = selectedList.target.id\n    if (lists.length === 1) {\n      alert(\"You can't delete your last list.\")\n    } else if (window.confirm('Are you sure?')) {\n      const updatedList = lists.filter((list) => {\n        return list.id !== targetId\n      })\n\n      setLists(updatedList)\n      setSelectedList(updatedList[0])\n      saveToStorage(updatedList)\n    }\n  }\n\n  const handleInput = (text) => {\n    setNewListName(text.target.value)\n  }\n\n  const handleInputKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      addNewList()\n    }\n  }\n\n  const addNewList = () => {\n    if (newListName !== '') {\n      const newList = {\n        id: uniqid(),\n        name: newListName,\n        todo: [],\n        doing: [],\n        done: [],\n      }\n\n      setLists([...lists, newList])\n      saveToStorage([...lists, newList])\n      setNewListName('')\n    } else {\n      alert('Enter a value')\n    }\n  }\n\n  return (\n    <>\n      <div className=\"button-container\">\n        <h1>Lists</h1>\n        <input\n          className=\"todo-input\"\n          onChange={handleInput}\n          onKeyPress={handleInputKeyPress}\n          value={newListName}\n        ></input>\n        <button className=\"todo-button\" onClick={addNewList}>\n          Add{' '}\n        </button>\n      </div>\n      <div className=\"lists-container\">\n        {lists.map((list) => {\n          return (\n            <div className=\"list-button-container\" key={list.id}>\n              <button\n                className=\"list-item\"\n                onClick={() => updateSelectedList(list.id)}\n              >\n                {list.name}\n              </button>\n              <Button\n                type=\"delete-button\"\n                id={list.id}\n                handleButton={removeList}\n              />\n            </div>\n          )\n        })}\n      </div>\n    </>\n  )\n}\n\nexport default Lists\n","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport uniqid from 'uniqid'\nimport Main from './components/Main'\nimport Lists from './components/Lists'\n\nfunction App() {\n  const defaultList = [\n    {\n      id: uniqid(),\n      name: 'First List',\n      todo: [\n        { id: uniqid(), name: 'First todo' },\n        { id: uniqid(), name: 'Second todo' },\n      ],\n      doing: [\n        { id: uniqid(), name: 'First doing' },\n        { id: uniqid(), name: 'Second doing' },\n      ],\n      done: [\n        { id: uniqid(), name: 'First done' },\n        { id: uniqid(), name: 'Second done' },\n      ],\n    },\n  ]\n\n  if (!localStorage.getItem('list')) {\n    const defaultListJSON = JSON.stringify(defaultList)\n    localStorage.setItem('list', defaultListJSON)\n  }\n\n  const storageList = JSON.parse(localStorage.getItem('list'))\n\n  const [lists, setLists] = useState(storageList || defaultList)\n\n  const [selectedList, setSelectedList] = useState(lists[0])\n\n  const saveToStorage = (lists) => {\n    const listJSON = JSON.stringify(lists)\n\n    localStorage.setItem('list', listJSON)\n  }\n\n  const updateSelectedList = (listId) => {\n    const targetList = lists.find((list) => {\n      return list.id === listId\n    })\n\n    if (targetList) {\n      setSelectedList(targetList)\n    }\n  }\n\n  useEffect(updateSelectedList, [])\n\n  const removeTask = (val) => {\n    if (window.confirm('Are you sure?')) {\n      const targetList = lists.find((list) => {\n        return selectedList.id === list.id\n      })\n      const targetDone = targetList.done.find((done) => {\n        return val.target.id === done.id\n      })\n      const newDone = targetList.done.filter((done) => {\n        return done !== targetDone\n      })\n      targetList.done = newDone\n      const newLists = lists.map((list) => {\n        return list.id === targetList.id ? targetList : list\n      })\n\n      setLists(newLists)\n      saveToStorage(newLists)\n    }\n  }\n\n  const toDoNext = (val) => {\n    const targetId = val.target.id\n    const targetList = lists.find((list) => {\n      return selectedList.id === list.id\n    })\n    const targetToDo = targetList.todo.find((todo) => {\n      return targetId === todo.id\n    })\n    const targetToDoIndex = targetList.todo.findIndex((i) => i.id === targetId)\n    targetList.doing.push(targetToDo)\n    targetList.todo.splice(targetToDoIndex, 1)\n    const newLists = lists.map((list) => {\n      return list.id === targetList.id ? targetList : list\n    })\n\n    setLists(newLists)\n    saveToStorage(newLists)\n  }\n\n  const doingNext = (val) => {\n    const targetId = val.target.id\n    const targetList = lists.find((list) => {\n      return selectedList.id === list.id\n    })\n    const targetDoing = targetList.doing.find((doing) => {\n      return targetId === doing.id\n    })\n    const targetDoingIndex = targetList.doing.findIndex(\n      (i) => i.id === targetId\n    )\n    targetList.done.push(targetDoing)\n    targetList.doing.splice(targetDoingIndex, 1)\n    const newLists = lists.map((list) => {\n      return list.id === targetList.id ? targetList : list\n    })\n\n    setLists(newLists)\n    saveToStorage(newLists)\n  }\n\n  const doingBack = (val) => {\n    const targetId = val.target.id\n    const targetList = lists.find((list) => {\n      return selectedList.id === list.id\n    })\n    const targetDoing = targetList.doing.find((doing) => {\n      return targetId === doing.id\n    })\n    const targetDoingIndex = targetList.doing.findIndex(\n      (i) => i.id === targetId\n    )\n    targetList.todo.push(targetDoing)\n    targetList.doing.splice(targetDoingIndex, 1)\n    const newLists = lists.map((list) => {\n      return list.id === targetList.id ? targetList : list\n    })\n\n    setLists(newLists)\n    saveToStorage(newLists)\n  }\n\n  const doneBack = (val) => {\n    const targetId = val.target.id\n    const targetList = lists.find((list) => {\n      return selectedList.id === list.id\n    })\n    const targetDone = targetList.done.find((done) => {\n      return targetId === done.id\n    })\n    const targetDoneIndex = targetList.done.findIndex((i) => i.id === targetId)\n    targetList.doing.push(targetDone)\n    targetList.done.splice(targetDoneIndex, 1)\n    const newLists = lists.map((list) => {\n      return list.id === targetList.id ? targetList : list\n    })\n\n    setLists(newLists)\n    saveToStorage(newLists)\n  }\n\n  return (\n    <div className=\"app\">\n      <div>\n        <Header list={selectedList.name} />\n      </div>\n      <div className=\"bottom-body\">\n        <div className=\"main-content\">\n          <Main\n            lists={lists}\n            setLists={setLists}\n            updateSelectedList={updateSelectedList}\n            selectedList={selectedList}\n            removeTask={removeTask}\n            toDoNext={toDoNext}\n            doingNext={doingNext}\n            doingBack={doingBack}\n            doneBack={doneBack}\n          />\n        </div>\n        <div className=\"all-lists-container container\">\n          <Lists\n            updateSelectedList={updateSelectedList}\n            lists={lists}\n            setLists={setLists}\n            setSelectedList={setSelectedList}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}